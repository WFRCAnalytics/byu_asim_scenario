# input tables
input_table_list:
  - tablename: households
    filename: synthetic_households.csv
    index_col: household_id
    rename_columns:
      HHID: household_id
      PERSONS: hhsize
      workers: num_workers
      VEHICL: auto_ownership
    keep_columns:
      - TAZ
      - income
      - hhsize
      - HHT
      - auto_ownership
      - num_workers
  - tablename: persons
    filename: synthetic_persons.csv
    index_col: person_id
    rename_columns:
      PERID: person_id
      per_num: PNUM
    keep_columns:
      - household_id
      - age
      - PNUM
      - sex
      - pemploy
      - pstudent
      - ptype
  - tablename: land_use
    filename: land_use_taz_geom.csv
    index_col: TAZ
    rename_columns:
      ZONE: TAZ
      COUNTY: county_id
    keep_columns:
      - DISTRICT
      - SD
      - county_id
      - TOTHH
      - TOTPOP
      - TOTACRE
      - RESACRE
      - CIACRE
      - TOTEMP
      - AGE0519
      - RETEMPN
      - FPSEMPN
      - HEREMPN
      - OTHEMPN
      - AGREMPN
      - MWTEMPN
      - PRKCST
      - OPRKCST
      - area_type
      - HSENROLL
      - COLLFTE
      - COLLPTE
      - TOPOLOGY
      - TERMINAL
      - geometry


# input skims
skims_file: skims_wfrc.omx

# convert input CSVs to HDF5 format and save to outputs directory
# create_input_store: True

# set False to disable variability check in simple_simulate and interaction_simulate
check_for_variability: False

# - shadow pricing global switches

# turn shadow_pricing on and off for all models (e.g. school and work)
# shadow pricing is deprecated for less than full samples
# see shadow_pricing.yaml for additional settings
use_shadow_pricing: False

#input_store: ../output/input_data.h5

# number of households to simulate
households_sample_size: 0
# simulate all households
# households_sample_size: 0

# turn writing of sample_tables on and off for all models
# (if True, tables will be written if DEST_CHOICE_SAMPLE_TABLE_NAME is specified in individual model settings)
# not recommended or supported for multiprocessing
want_dest_choice_sample_tables: False

# log interaction simulate/sample expressions that return prohibitive utility values that exclude all alternatives
log_alt_losers: False


##############
#
# chunking
#

# chooser chunk size in gigabytes
# target top memory usage during activitysim run (including shared memory, loaded tables, and transient memory usage)
#chunk_size: 12_000_000_000
chunk_size: 0

# minimum fraction of total chunk_size to reserve for adaptive chunking
min_available_chunk_ratio: 0.05

# initial number of chooser rows for first chunk in training mode
# when there is no pre-existing chunk_cache to set initial value
# ordinarily bigger is better as long as it is not so big it causes memory issues (e.g. accessibility with lots of zones)
default_initial_rows_per_chunk: 500

# method to calculate memory overhead when chunking is enabled
chunk_method: hybrid_uss

# chunk training mode
# training to determine the chunking settings written to a cache file that is re-used for production runs
# training
# production
# disabled
# assume enough RAM to not chunk
chunk_training_mode: disabled

# whether to preserve or delete subprocess chunk and mem logs when they are consolidated at end of multiprocess run
keep_chunk_logs: True
keep_mem_logs: True

##############


# read cached skims (using numpy memmap) from output directory (memmap is faster than omx )
#read_skim_cache: True
# write memmapped cached skims to output directory after reading from omx, for use in subsequent runs
#write_skim_cache: True
#alternate dir to read/write skim cache (defaults to output_dir)
skim_cache_dir: data/cache

# - tracing

# trace household id; comment out or leave empty for no trace
# households with all tour types
#  [ 728370 1234067 1402924 1594625 1595333 1747572 1896849 1931818 2222690 2344951 2677154]
# 2223759
trace_hh_id:

# trace origin, destination in accessibility calculation; comment out or leave empty for no trace
# trace_od: [5, 11]
trace_od:

# to resume after last successful checkpoint, specify resume_after: _
resume_after:

checkpoints: True
# explicit list of models to checkpoint
#checkpoints:
#  - mandatory_tour_scheduling
#  - non_mandatory_tour_scheduling
#  - trip_mode_choice


models:
  ### mp_initialize step
  - initialize_landuse
  - initialize_households
  ### mp_accessibility step
  - compute_accessibility
  ### mp_households step
  - school_location
  - workplace_location
  - auto_ownership_simulate
  - free_parking
  - cdap_simulate
  - mandatory_tour_frequency
  - mandatory_tour_scheduling
  - joint_tour_frequency
  - joint_tour_composition
  - joint_tour_participation
  - joint_tour_destination
  - joint_tour_scheduling
  - non_mandatory_tour_frequency
  - non_mandatory_tour_destination
  - non_mandatory_tour_scheduling
  - tour_mode_choice_simulate
  - atwork_subtour_frequency
  - atwork_subtour_destination
  - atwork_subtour_scheduling
  - atwork_subtour_mode_choice
  - stop_frequency
  - trip_purpose
  - trip_destination
  - trip_purpose_and_destination
  - trip_scheduling
  - trip_mode_choice
  ### mp_summarize step
  - write_data_dictionary
  - generate_beam_plans
  - track_skim_usage
  - write_trip_matrices
  - write_tables

multiprocess: True
strict: False   # this is a warning filter
mem_tick: 30  # I think its a helper for tracking memory usage.

# multiprocessing
multiprocess_steps:
  - name: mp_initialize
    begin: initialize_landuse
  - name: mp_accessibility
    begin: compute_accessibility
    slice:
      tables:
        - accessibility
      # don't slice any tables not explicitly listed above in slice.tables
      except: True
  - name: mp_households
    begin: school_location
    num_processes: 16
    slice:
      tables:
        - households
        - persons
  - name: mp_summarize
    begin: write_data_dictionary

output_tables:
  h5_store: False
  action: include
  prefix: final_
  tables:
    - checkpoints
    - accessibility
    - blocks
    - land_use
    - households
    - persons
    - tours
    - trips
    - joint_tour_participants
    - plans

# area_types less than this are considered urban
urban_threshold: 4
cbd_threshold: 2
rural_threshold: 6

# upperEA	Upper limit on time of day for the Early morning time period		5
# upperAM	Upper limit on time of day for the AM peak time period		10
# upperMD	Upper limit on time of day for the Midday time period		15
# upperPM	Upper limit on time of day for the PM time peak period		19

skim_time_periods:
    period_minutes: 60
    periods:
        - 0
        - 6
        - 11
        - 16
        - 20
        - 24
    labels:
        - EA
        - AM
        - MD
        - PM
        - EV

# - value of time

# value_of_time = lognormal(np.log(median_value_of_time * mu), sigma).clip(min_vot, max_vot)

min_value_of_time: 1
max_value_of_time: 50
distributed_vot_mu: 0.684
distributed_vot_sigma: 0.85

household_median_value_of_time:
  1: 6.01
  2: 8.81
  3: 10.44
  4: 12.86
